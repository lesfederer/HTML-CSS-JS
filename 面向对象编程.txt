^^^面向对象的编程^^^

* 封装：
    主要用于阐述对象中所包含（或封装）的内容，它们通常由两部分组成：
	・相关的数据（用于存储属性）
	・基于这些数据所能做的事（所能调用的方法）
    还包含一层隐藏信息的概念。

JavaScript中没有相关关键字限定方法和属性的可见性，但有一些隐藏数据的方法，以保护程序的隐秘性。

当一个数字以0开头，就表示这是一个八进制数。例如，八进制数0377所代表的就是十进制数255.

* css样式表中的颜色值使用的是十六进制。
在css中，定义颜色的方式有两种：
  ・使用十进制分别指定R(红色)、G(绿)、B(蓝)的值，取值范围都为0~255。
    例如rgb(0,0,0)代表黑色、rgb(255,0,0)代表红色（红色达到最大值，而绿和蓝都为0值）。
  ・使用十六进制数，两个数位代表一种色值，依次是R、G、B。
    例如，#000000代表黑色、#ff0000代表红色，因为十六进制的ff就等于255。

用0x前缀来表示一个十六进制值（简称为hex）

* 指数表示法：
    1e1(或1e+1、1E1、1E+1）的指数形式，意思是在数字1后面加1个0，即10。2e+3的意思是在数字2后面加3个0，即2000。
    也可将2e+3理解为将数字2的小数点向右移三位。同理，2e-3理解为将数字2的小数点左移三位。

* Infinity：代表超出JavaScript处理范围的数值。

数字型，能处理的最大值是1.7976931348623157e+308,最小值为5e-324。
如，输入1e308可以处理，正常显示，1e309出界，输入Infinity。

任何数除0也为infinity。

 Infinity 代表最大数。
-Infinity 代表最小数。

Infinity与其他的任何操作数执行任何算术运算的结果，都是Infinity。

* NaN：不是数字
但它属于数字，是一种特殊的数字。

object()方法，实现继承：
///object()函数，其实只做一件事，就是把子对象的prototype属性，指向父对象，从而使得子对象与父对象连在一起。
function object(o) {


　　　　function F() {}


　　　　F.prototype = o;


　　　　return new F();


　　}

var Chinese= { nation : '中国' };

var Doctor = { career : '医生' };

var Doctor = object(Chinese);

Doctor.career = '医生';

//"医生"

Doctor.nation
;
//"中国"



























